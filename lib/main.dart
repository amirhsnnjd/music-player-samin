import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:flutter_spinkit/flutter_spinkit.dart';
import 'package:just_audio/just_audio.dart';
import 'package:music_player_project/Album.dart';
import 'package:music_player_project/Provider/Data.dart';
import 'package:music_player_project/Provider/PhotoSize.dart';
import 'package:provider/provider.dart';
import 'package:http/http.dart' as http;

void main() {
  WidgetsFlutterBinding.ensureInitialized();
  runApp(MultiProvider(
    providers: [
      ChangeNotifierProvider<PhotoSize>(
        create: (context) => PhotoSize(),
      ),
      ChangeNotifierProvider<Data_provider>(
        create: (context) => Data_provider(),
      ),
    ],
    child: MyApp(),
  ));
}

class MyApp extends StatefulWidget {
  @override
  State<MyApp> createState() => _MyAppState();
}

Future<Autogenerated> FetchAlbum() async {
  final _response = await http.get(Uri.parse(
      "http://cast1.asurahosting.com:2199/rpc/ahanghaa/streaminfo.get"));
  if (_response.statusCode == 200)
    return Autogenerated.fromJson(jsonDecode(_response.body));
  else
    throw Exception("error");
}

class _MyAppState extends State<MyApp> {
  late Future<Autogenerated> album;

  /* @override
  void initState() {
    // TODO: implement initState
    super.initState();
    album = FetchAlbum();
    f();
  }*/

  /* Future<void> f() async {
    return Future.delayed(const Duration(seconds: 2), () {
      setState(() {
        album = FetchAlbum();
        print("object");
        f();
      });
    });
  }*/

  // This widget is the root of your application.
  @override
  final player = AudioPlayer();

  Widget build(BuildContext context) {
    final pl = Provider.of<PhotoSize>(context);
    final sn = Provider.of<Data_provider>(context);
    sn.refresh();
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
          resizeToAvoidBottomInset: false,
          backgroundColor: Colors.black,
          body: Center(
            child: Column(
              children: [
                FutureBuilder<Autogenerated>(
                  future: sn.album,
                  builder: (context, snapshot) {
                    if (snapshot.hasData) {
                      return Column(
                        children: [
                          Container(
                            height: 300,
                            width: 300,
                            child: Column(
                              children: [
                                AnimatedContainer(
                                  color: Colors.black,
                                  child: Image.network(
                                      snapshot
                                          .data!.data!.first.track!.imageurl!,
                                      fit: BoxFit.fill),
                                  duration: const Duration(milliseconds: 200),
                                  width: pl.play ? 300.0 : 150.0,
                                  height: pl.play ? 300.0 : 150.0,
                                ),
                              ],
                            ),
                          ),
                          Text(
                            "${snapshot.data!.data!.first.song}",
                            style: TextStyle(color: Colors.white),
                          )
                        ],
                      );
                    }
                    return const SpinKitRotatingCircle(
                      color: Colors.green,
                      size: 50.0,
                    );
                  },
                ),
                FloatingActionButton(
                    backgroundColor: Colors.green,
                    child: pl.play ? Icon(Icons.pause) : Icon(Icons.play_arrow),
                    onPressed: () async {
                      pl.resize();

                      if (pl.play) {
                        await player.setAudioSource(AudioSource.uri(Uri.parse(
                            'http://cast1.my-control-panel.com:7099/live')));

                        await player.play();
                      } else
                        await player.pause();
                    })
              ],
            ),
          )),
    );
  }
}
